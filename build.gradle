buildscript {
    repositories {
        maven { url 'http://arti-01:8081/artifactory/plugins-release' }
    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
    }
}

/**
 * Plug-in development
 */

plugins {
   id 'nu.studer.plugindev' version '1.0.3'
   id 'com.jfrog.bintray' version '1.3.1'
    /**
     * Versioning applied to itself
     */
    id 'net.nemerosa.versioning' version '2.5.0'
}

apply plugin: 'groovy'
apply plugin: "com.jfrog.artifactory"

/**
 * Meta information
 */

group = 'fr.coppernic.gradle.plugin'
version = versioning.info.display

/**
 * Dependencies
 */

ext {
    jgitVersion = '4.5.0.201609210915-r'
}

dependencies {
    localGroovy()
    compile 'org.ajoberstar:grgit:1.7.0'
    compile "org.eclipse.jgit:org.eclipse.jgit.ui:${jgitVersion}"
    compile "org.eclipse.jgit:org.eclipse.jgit:${jgitVersion}"
    compile 'org.tmatesoft.svnkit:svnkit:1.8.12'
    testCompile "junit:junit:4.12"
    testCompile "commons-lang:commons-lang:2.6"
    testCompile "commons-io:commons-io:2.5"



}

/**
 * Plug-in definition
 */

plugindev {
    pluginImplementationClass 'net.nemerosa.versioning.VersioningPlugin'
    pluginDescription 'Gradle plug-in that computes version information from the SCM'
    pluginLicenses 'MIT'
    pluginTags 'gradle', 'plugin', 'scm', 'git', 'svn', 'version'
    authorId 'dcoraboeuf'
    authorName 'Damien Coraboeuf'
    authorEmail 'damien.coraboeuf@gmail.com'
    projectUrl 'https://github.com/nemerosa/versioning'
    projectInceptionYear '2015'
    done()
}

/**
 * Plug-in publication
 */

bintray {
    user = bintrayUser
    key = bintrayApiKey
    pkg {
        repo = 'nemerosa'
        version {
            attributes = [
                    'gradle-plugin': 'net.nemerosa.versioning:net.nemerosa:versioning'
            ]
        }
    }
}

/**
 * Wrapper definition
 */

task wrapper(type: Wrapper) {
   gradleVersion = '2.13'
}

test {
  environment "GIT_TEST_BRANCH", "feature/456-cute"
  environment "SVN_TEST_BRANCH", "feature-456-cute"
}

try {
    // Configuration of artifactory publish
    artifactory {
        contextUrl = "${artifactory_contextUrl}"
        //The base Artifactory URL if not overridden by the publisher/resolver
        publish {
            repository {
                repoKey = 'plugins-release-local'
                username = "${artifactory_user}"
                password = "${artifactory_password}"
                maven = true
            }
            defaults {
                publications('plugin')
                publishArtifacts = true
                publishPom = true
            }
        }
    }
    // Task dependency
    artifactoryPublish.dependsOn(['build'])
} catch (MissingPropertyException ignore) {
    println ignore
}
